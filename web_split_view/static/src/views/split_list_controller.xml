<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="split.View" owl="1">
        <div t-att-class="className + 'overflow-hidden'" t-ref="root">

            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">

                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>

                <t t-set-slot="control-panel-always-buttons">
                    <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                        <MultiRecordViewButton
                            t-if="button.display === 'always'"
                            list="model.root"
                            className="button.className"
                            clickParams="button.clickParams"
                            defaultRank="'btn-secondary'"
                            domain="props.domain"
                            icon="button.icon"
                            string="button.string"
                            title="button.title"
                        />
                    </t>
                </t>

                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar" autofocus="firstLoad"/>
                </t>

                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu t-if="!nbSelected"/>
                </t>

                <t t-set-slot="control-panel-selection-actions">
                    <div t-if="nbSelected" class="d-flex gap-1">
                        <t t-call="web.ListView.Selection"/>
                        <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                            <MultiRecordViewButton
                                t-if="button.display !== 'always'"
                                list="model.root"
                                className="button.className"
                                clickParams="button.clickParams"
                                defaultRank="'btn-secondary'"
                                domain="props.domain"
                                icon="button.icon"
                                string="button.string"
                                title="button.title"
                            />
                        </t>
                        <t t-if="props.info.actionMenus">
                            <ActionMenus
                                getActiveIds="() => model.root.selection.map((r) => r.resId)"
                                context="props.context"
                                domain="props.domain"
                                items="actionMenuItems"
                                isDomainSelected="model.root.isDomainSelected"
                                resModel="model.root.resModel"
                                onActionExecuted="() => model.load()"/>
                        </t>
                    </div>
                </t>

                <div class="d-flex split-view-wrapper" t-ref="split_wrapper">

                    <div class="ps-2 split-list" t-ref="split_list">
                        <t
                            t-component="props.Renderer"
                            list="model.root"
                            allowSelectors="true"
                            activeActions="activeActions"
                            evalViewModifier.bind="evalViewModifier"
                            archInfo="archInfo"
                            openRecord.bind="openRecord"
                            noContentHelp="true"
                            editable="false"
                        />
                    </div>

                    <div class="sv-splitter" t-ref="splitter" t-on-mousedown="onMountDownSplitter" t-on-mouseover="onMountOverSplitter" t-on-mouseout="onMountOutSplitter">
                        <div class="splitter-icon-section">
                            <div class="splitter-icon splitter-icon-left" t-ref="splitter_collapse_left" t-on-click="onClickSplitterCollapseLeft">
                                <i class="fa fa-arrow-circle-left"/>
                            </div>
                            <div class="splitter-icon splitter-icon-right" t-ref="splitter_collapse_right" t-on-click="onClickSplitterCollapseRight">
                                <i class="fa fa-arrow-circle-right"/>
                            </div>
                        </div>
                    </div>


                    <div class="overflow-auto split-form" t-ref="split_form">
                        <FormViewWrapper formViewId="props.formViewId" adjustChatter="() => this.adjustChatter()"  reloadSplitListRecords="(selectedRecordId, isAfterCreate, isAfterDelete) => this.reloadSplitListRecords(selectedRecordId, isAfterCreate, isAfterDelete)"/>
                    </div>
                </div>
            </Layout>

        </div>
    </t>

</templates>
